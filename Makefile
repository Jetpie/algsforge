# ENV
CXX = g++

BIN_DIR := ./bin
SRC_DIR := ./src
LIB_DIR := ./lib
INC_DIR := ./include
OBJ_DIR := ./obj

# FLAGS
CXXFLAGS := -g -Wall -std=c++0x -O3\
-I$(INC_DIR)/

# custom functions
# rule to create a directory
.PRECIOUS: %/.dirstamp
%/.dirstamp :
	@printf "%10s %s\n" MK "$(dir $@)"
	@mkdir -p $(dir $@)
	@echo "Directory generated by make." > $@

# $(call gendir, TARGET, DIR1 DIR2 ...) creates a target TARGET-dir that
# triggers the creation of the directories DIR1, DIR2
define gendir
$(1)=$(foreach x,$(2),$(x)/.dirstamp)
endef

SOURCES:= $(wildcard $(SRC_DIR)/core/*.cpp)
OBJECTS:= $(patsubst $(SRC_DIR)/core/%,$(OBJ_DIR)/%,$(SOURCES:.cpp=.o))

# generate the all-dir target
$(eval $(call gendir, dirs, $(BIN_DIR) $(OBJ_DIR) ))

.PRECIOUS: $(OBJECTS)

all: test

test: $(addprefix $(BIN_DIR)/, $(patsubst %.cpp,%,$(notdir $(wildcard $(SRC_DIR)/tests/*.cpp)) ) )


$(BIN_DIR)/%: $(SRC_DIR)/tests/%.cpp $(OBJECTS) $(dirs)
	@echo "	Linking..."
	@echo "	$(CXX) $(CXXFLAGS) $< $(OBJECTS) $(LDFLAGS) -o $@";  \
	$(CXX) $(CXXFLAGS) $< $(OBJECTS) $(LDFLAGS) -o $@

$(OBJ_DIR)/%.o: $(SRC_DIR)/core/%.cpp $(dirs)
	@mkdir -p $(OBJ_DIR)
	@echo "	$(CXX) $(CXXFLAGS) -c -o $@ $<"; $(CXX) $(CXXFLAGS) -c -o $@ $<


clean:
	@echo "	Cleaning..."
	@echo "	$(RM) -r $(OBJ_DIR) $(BIN_DIR)/*"; $(RM) -r $(OBJ_DIR) $(BIN_DIR)/*

.PHONY: clean all test
